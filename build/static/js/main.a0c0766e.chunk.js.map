{"version":3,"sources":["components/Search.js","components/GameListItem.js","components/Games.js","components/Game.js","App.js","index.js"],"names":["Search","state","query","onSubmit","e","preventDefault","props","search","immaTyping","setState","target","name","value","this","className","type","placeholder","onChange","Component","GameListItem","to","game","id","src","image","small_url","alt","Games","games","map","key","Game","images","platforms","genres","publishers","devs","gameId","match","params","console","log","fetchJsonp","jsonpCallback","then","res","json","results","developers","catch","ex","plat","genre","devlist","dev","publist","pub","style","backgroundImage","original_url","deck","expected_release_year","App","exact","path","render","Fragment","component","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.a0c0766e.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\n\r\nexport class Search extends Component {\r\n  state = {\r\n    query: ''\r\n  };\r\n\r\n  onSubmit = e => {\r\n    e.preventDefault();\r\n    this.props.search(this.state.query);\r\n  };\r\n\r\n  immaTyping = e => this.setState({ [e.target.name]: e.target.value });\r\n\r\n  render() {\r\n    return (\r\n      <form onSubmit={this.onSubmit} className='search-form'>\r\n        <input\r\n          type='text'\r\n          name='query'\r\n          placeholder='Search for a game title...'\r\n          value={this.state.query}\r\n          onChange={this.immaTyping}\r\n        />\r\n        <input type='submit' value='Search' className='search-btn' />\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Search;\r\n","import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport class GameListItem extends Component {\r\n  render() {\r\n    return (\r\n      <div className='game-list-item'>\r\n        <Link to={`/game/${this.props.game.id}`}>\r\n          <img src={this.props.game.image.small_url} alt='' />\r\n          <h3>{this.props.game.name}</h3>\r\n        </Link>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n// PropTypes\r\nGameListItem.propTypes = {\r\n  game: PropTypes.object.isRequired\r\n};\r\n\r\nexport default GameListItem;\r\n","import React, { Component } from 'react';\r\nimport GameListItem from './GameListItem';\r\nimport PropTypes from 'prop-types';\r\n\r\nclass Games extends Component {\r\n    render() {\r\n        return(\r\n            <div className=\"game-list\">\r\n                {this.props.games.map(game => <GameListItem key={game.id} game={game} />)}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n// PropTypes\r\nGames.propTypes = {\r\n    games: PropTypes.array.isRequired\r\n}\r\n\r\nexport default Games;","import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport fetchJsonp from 'fetch-jsonp';\r\n\r\nexport class Game extends Component {\r\n  state = {\r\n    game: '',\r\n    images: '',\r\n    platforms: [],\r\n    genres: [],\r\n    publishers: [],\r\n    devs: []\r\n  };\r\n\r\n  componentDidMount() {\r\n    const gameId = this.props.match.params.id;\r\n    console.log(gameId);\r\n\r\n    fetchJsonp(\r\n      'https://www.giantbomb.com/api/game/' +\r\n      gameId +\r\n      '/?api_key=ec164f3e4ebfe95b8f71fde3a5b2562480e35db4&format=jsonp',\r\n      { jsonpCallback: 'json_callback' }\r\n    )\r\n      .then(res => res.json())\r\n      .then(json => {\r\n        console.log('parsed game', json);\r\n        this.setState({\r\n          game: json.results,\r\n          images: json.results.image,\r\n          platforms: json.results.platforms,\r\n          genres: json.results.genres,\r\n          publishers: json.results.publishers,\r\n          devs: json.results.developers\r\n        });\r\n      })\r\n      .catch(ex => console.log('parsing failed', ex));\r\n  }\r\n\r\n  render() {\r\n    const platforms = this.state.platforms.map(plat => <span key={plat.id}>{plat.name}</span>);\r\n    const genres = this.state.genres.map(genre => <span key={genre.id}>{genre.name}</span>);\r\n    const devlist = this.state.devs.map(dev => <span key={dev.id}>{dev.name}</span>);\r\n    const publist = this.state.publishers.map(pub => <span key={pub.id}>{pub.name}</span>);\r\n    return (\r\n      <div className='game-details' style={{ backgroundImage: `url(${this.state.images.original_url})` }}>\r\n        <div className=\"game-details-inner\">\r\n          <img src={this.state.images.small_url} alt={this.state.game.name} />\r\n          <div className=\"details-right\">\r\n            <Link to='/'>Go Back Home</Link>\r\n            <h1>{this.state.game.name}</h1>\r\n            <p>{this.state.game.deck}</p>\r\n            <h5>Platforms:</h5>\r\n            {platforms}<br></br>\r\n            <h5>Genres:</h5>\r\n            {genres}<br></br>\r\n            <h5>Developers:</h5>\r\n            {devlist}<br></br>\r\n            <h5>Publishers:</h5>\r\n            {publist}<br></br>\r\n            <h5>Expected Release Year:</h5>\r\n            {this.state.game.expected_release_year}<br></br>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Game;","import React, { Component } from 'react';\nimport fetchJsonp from 'fetch-jsonp';\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\n\nimport './App.css';\nimport Search from './components/Search';\nimport Games from './components/Games';\nimport Game from './components/Game';\n\nclass App extends Component {\n  state = {\n    games: []\n  };\n\n  // Search:\n  search = query => {\n    fetchJsonp(\n      'https://www.giantbomb.com/api/search/?api_key=ec164f3e4ebfe95b8f71fde3a5b2562480e35db4&query=' +\n        query + '&resources=game&format=jsonp&limit=12',\n      { jsonpCallback: 'json_callback' }\n    )\n      .then(res => res.json())\n      .then(json => {\n        console.log('parsed json', json);\n        this.setState({ games: json.results });\n      })\n      .catch(ex => console.log('parsing failed', ex));\n  };\n\n  render() {\n    return (\n      <Router>\n        <div className='App'>\n          <Route exact path=\"/\" render={props => (\n            <React.Fragment>\n              <div className=\"app-name\">\n                <h1>Game Search App</h1>\n                <small>0.0.4</small>\n              </div>\n              <div className=\"links\">\n                {/* <Link to=\"/about\">About</Link> */}\n              </div>\n              <Search search={this.search} />\n              <Games games={this.state.games} />\n            </React.Fragment>\n          )} />\n          <Route path=\"/game/:id\" component={Game} />\n        </div>\n      </Router>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n// import * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n// serviceWorker.unregister();\n"],"sourceRoot":""}